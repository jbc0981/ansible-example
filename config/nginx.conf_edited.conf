user nginx nginx;
worker_processes 2;
error_log /var/log/nginx/error.log;
worker_rlimit_nofile 8192;

events {
    worker_connections 4096;
}

http {
    # your code goes here ...
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    upstream application {
        server localhost:8000 weight=3;
    }

    server {
    # Enforce the use of HTTPS
        listen 80;
        listen [::]:80;
        ssl off;
        location / {
            return 301 https://$host$request_uri;
        }        
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name localhost;
        location / {
            proxy_set_header        Host            $host;
            proxy_set_header        X-Real-IP       $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass      http://application;
        }
    }

    ssl_certificate /etc/nginx/cert/self-signed.crt;
    ssl_certificate_key /etc/nginx/cert/self-signed.key;
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 60m;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;
    ssl_dhparam /etc/nginx/cert/dhparam.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/cert/self-signed.crt;

    #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Strict-Transport-Security "max-age=31536000" always;

}